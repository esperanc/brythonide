"""From https://editor.p5js.org/generative-design/sketches/P_2_1_3_05# P_2_1_3_05# Generative Gestaltung – Creative Coding im Web# ISBN: 978-3-87439-902-9, First Edition, Hermann Schmidt, Mainz, 2018# Benedikt Groß, Hartmut Bohnacker, Julia Laub, Claudius Lazzeroni# with contributions by Joey Lee and Niels Poldervaart# Copyright 2018# http://www.generative-gestaltung.de# Licensed under the Apache License, Version 2.0 (the "License")# you may not use this file except in compliance with the License.# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0# Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an "AS IS" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License./** * changing positions of stapled circles in a grid * * MOUSE * position x          : horizontal position shift * position y          : vertical position shift * left click          : random position shift * * KEYS * s                   : save png */"""from p5py import *tileCountX = 10tileCountY = 10colorStep = 6endSize = 0stepSize = 30actRandomSeed = 0def setup() :  createCanvas(400, 400)  noStroke()  global tileWidth, tileHeight  tileWidth = width / tileCountX  tileHeight = height / tileCountYdef draw() :  background(255)  randomSeed(actRandomSeed)  stepSize = min(mouseX, width) / 10  endSize = min(mouseY, height) / 10  for gridY in range(tileCountY+1):    for gridX in range(tileCountX+1):      posX = tileWidth * gridX      posY = tileHeight * gridY            # modules      heading = int(random(4))      for i in range(0,int(stepSize),3):        diameter = map(i, 0, stepSize, tileWidth, endSize)        fill(255 - i * colorStep)        x,y = [(posX + i, posY),(posX, posY + i),               (posX - i, posY),(posX, posY - i)][heading]        ellipse(x,y,diameter,diameter)        def mousePressed() :  global actRandomSeed  actRandomSeed = random(100000)def keyReleased() :  if (key == 's' or key == 'S'): saveCanvas(gd.timestamp(), 'png')run()